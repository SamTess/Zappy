"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[3976],{2053:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"intro","title":"Zappy - Multi-Agent Virtual Ecosystem","description":"Welcome to the Zappy documentation, a sophisticated multi-agent virtual ecosystem featuring a game server, 3D graphical interface, and intelligent AI clients.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/Zappy/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/Epitech/Zappy/tree/main/docs/docusaurus/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Getting Started with Zappy","permalink":"/Zappy/docs/getting-started"}}');var r=i(4848),s=i(8453);const l={sidebar_position:1},a="Zappy - Multi-Agent Virtual Ecosystem",c={},o=[{value:"What is Zappy?",id:"what-is-zappy",level:2},{value:"Game Mechanics",id:"game-mechanics",level:3},{value:"System Architecture",id:"system-architecture",level:2},{value:"\ud83c\udfae Game Server (C)",id:"-game-server-c",level:3},{value:"\ud83c\udfa8 3D Graphical Interface (C++)",id:"-3d-graphical-interface-c",level:3},{value:"\ud83e\udd16 AI Clients (Python)",id:"-ai-clients-python",level:3},{value:"Network Architecture",id:"network-architecture",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Advanced AI Behaviors",id:"advanced-ai-behaviors",level:3},{value:"Performance Optimizations",id:"performance-optimizations",level:3},{value:"Development Tools",id:"development-tools",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Technology Stack",id:"technology-stack",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"zappy---multi-agent-virtual-ecosystem",children:"Zappy - Multi-Agent Virtual Ecosystem"})}),"\n",(0,r.jsxs)(n.p,{children:["Welcome to the ",(0,r.jsx)(n.strong,{children:"Zappy"})," documentation, a sophisticated multi-agent virtual ecosystem featuring a game server, 3D graphical interface, and intelligent AI clients."]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-zappy",children:"What is Zappy?"}),"\n",(0,r.jsx)(n.p,{children:"Zappy is an advanced multiplayer simulation where AI-controlled agents compete for survival and evolution in a resource-constrained virtual world. Players must collect resources, communicate with teammates, and perform complex rituals to advance through difficulty levels."}),"\n",(0,r.jsx)(n.h3,{id:"game-mechanics",children:"Game Mechanics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Management"}),": Agents must collect food to survive and minerals for evolution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Team Collaboration"}),": Players work together to perform incantation rituals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Strategic Communication"}),": Encrypted broadcast system for team coordination"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spatial Intelligence"}),": Dynamic pathfinding and exploration algorithms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Level Progression"}),": Eight levels of increasing complexity and requirements"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,r.jsx)(n.p,{children:"The project consists of three main components communicating via TCP/IP protocols:"}),"\n",(0,r.jsx)(n.h3,{id:"-game-server-c",children:"\ud83c\udfae Game Server (C)"}),"\n",(0,r.jsx)(n.p,{children:"High-performance game engine managing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Real-time world simulation"}),"\n",(0,r.jsx)(n.li,{children:"Multi-client networking"}),"\n",(0,r.jsx)(n.li,{children:"Game rules enforcement"}),"\n",(0,r.jsx)(n.li,{children:"Resource distribution algorithms"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-3d-graphical-interface-c",children:"\ud83c\udfa8 3D Graphical Interface (C++)"}),"\n",(0,r.jsx)(n.p,{children:"Advanced visualization system featuring:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Real-time 3D rendering with Raylib"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic camera controls"}),"\n",(0,r.jsx)(n.li,{children:"Resource and player visualization"}),"\n",(0,r.jsx)(n.li,{children:"Game state monitoring tools"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-ai-clients-python",children:"\ud83e\udd16 AI Clients (Python)"}),"\n",(0,r.jsx)(n.p,{children:"Intelligent agents with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Behavioral state machines"}),"\n",(0,r.jsx)(n.li,{children:"A* pathfinding algorithms"}),"\n",(0,r.jsx)(n.li,{children:"Encrypted team communication"}),"\n",(0,r.jsx)(n.li,{children:"Adaptive decision-making systems"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"network-architecture",children:"Network Architecture"}),"\n",(0,r.jsx)(n.mermaid,{value:'flowchart TB\n    subgraph "AI Clients (Python)"\n        AI1[AI Agent 1]\n        AI2[AI Agent 2]\n        AI3[AI Agent N...]\n    end\n    \n    subgraph "Game Server (C)"\n        Server[Core Engine]\n    end\n    \n    subgraph "Visualization"\n        GUI[3D Interface C++]\n    end\n    \n    AI1 --\x3e|TCP Commands| Server\n    AI2 --\x3e|TCP Commands| Server\n    AI3 --\x3e|TCP Commands| Server\n    Server --\x3e|Game State| GUI\n    Server --\x3e|Responses| AI1\n    Server --\x3e|Responses| AI2\n    Server --\x3e|Responses| AI3'}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsx)(n.h3,{id:"advanced-ai-behaviors",children:"Advanced AI Behaviors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dyson Collector"}),": Optimized resource gathering patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Incanter"}),": Strategic evolution and ritual coordination"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Explorer"}),": Intelligent map exploration with spiral patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Communicator"}),": Encrypted inter-agent messaging"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimizations",children:"Performance Optimizations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Asynchronous network communication"}),"\n",(0,r.jsx)(n.li,{children:"State caching systems"}),"\n",(0,r.jsx)(n.li,{children:"Efficient resource algorithms"}),"\n",(0,r.jsx)(n.li,{children:"Real-time rendering optimizations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"development-tools",children:"Development Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Comprehensive logging system"}),"\n",(0,r.jsx)(n.li,{children:"Unit testing frameworks"}),"\n",(0,r.jsx)(n.li,{children:"Performance profiling tools"}),"\n",(0,r.jsx)(n.li,{children:"Documentation generation"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(n.p,{children:"Choose your path to explore Zappy:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./getting-started",children:"Quick Start Guide"})}),": Build and run the project"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./architecture",children:"Architecture Overview"})}),": Deep dive into system design"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./server/",children:"Server Documentation"})}),": Game engine implementation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./gui/",children:"GUI Documentation"})}),": 3D interface development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./ai/",children:"AI Documentation"})}),": Intelligent agent programming"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./protocols/",children:"Protocol Reference"})}),": Network communication specs"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Component"}),(0,r.jsx)(n.th,{children:"Language"}),(0,r.jsx)(n.th,{children:"Framework"}),(0,r.jsx)(n.th,{children:"Purpose"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Server"}),(0,r.jsx)(n.td,{children:"C"}),(0,r.jsx)(n.td,{children:"POSIX Sockets"}),(0,r.jsx)(n.td,{children:"Game engine & networking"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GUI"}),(0,r.jsx)(n.td,{children:"C++"}),(0,r.jsx)(n.td,{children:"Raylib/RayGUI"}),(0,r.jsx)(n.td,{children:"3D visualization"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AI"}),(0,r.jsx)(n.td,{children:"Python"}),(0,r.jsx)(n.td,{children:"AsyncIO"}),(0,r.jsx)(n.td,{children:"Intelligent agents"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Docs"}),(0,r.jsx)(n.td,{children:"TypeScript"}),(0,r.jsx)(n.td,{children:"Docusaurus"}),(0,r.jsx)(n.td,{children:"Documentation"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Ready to dive into the world of intelligent multi-agent systems? Let's get started!"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);