"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[250],{394:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"gui/index","title":"Graphical Interface (GUI)","description":"The Zappy Graphical Interface is a sophisticated 3D visualization system that provides real-time observation of the game state, including map, players, resources, and game events.","source":"@site/docs/gui/index.md","sourceDirName":"gui","slug":"/gui/","permalink":"/Zappy/en/docs/gui/","draft":false,"unlisted":false,"editUrl":"https://github.com/Epitech/Zappy/tree/main/docs/docusaurus/docs/gui/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var r=i(4848),t=i(8453);const l={sidebar_position:1},c="Graphical Interface (GUI)",d={},a=[{value:"Key Features",id:"key-features",level:2},{value:"Technical Specifications",id:"technical-specifications",level:2},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Core Architecture",id:"core-architecture",level:2},{value:"User Interface Components",id:"user-interface-components",level:2},{value:"Rendering Technologies",id:"rendering-technologies",level:2},{value:"Communication Protocol",id:"communication-protocol",level:2},{value:"Dynamic Library System (DLLoader)",id:"dynamic-library-system-dlloader",level:2},{value:"3D Visualization Strategies",id:"3d-visualization-strategies",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"graphical-interface-gui",children:"Graphical Interface (GUI)"})}),"\n",(0,r.jsx)(n.p,{children:"The Zappy Graphical Interface is a sophisticated 3D visualization system that provides real-time observation of the game state, including map, players, resources, and game events."}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Advanced 3D Rendering"}),": High-performance visualization using Raylib/OpenGL"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multiple View Modes"}),": Overhead, isometric, and player-following camera perspectives"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Visualization"}),": Detailed representation of game resources with texture and model support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Player Tracking"}),": Real-time visualization of player positions, orientations, and actions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Game Event Visualization"}),": Visual effects for incantations, egg laying, and other game events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Connectivity"}),": Robust network communication with the Zappy server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simulation Controls"}),": Interfaces to adjust simulation speed and parameters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dynamic Library Loading"}),": Modular architecture for graphics and UI components"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"technical-specifications",children:"Technical Specifications"}),"\n",(0,r.jsx)(n.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rendering Performance"}),": 60+ FPS on standard hardware"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Map Size Support"}),": Optimized for maps up to 100\xd7100 tiles"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connection Stability"}),": Automatic reconnection and state recovery"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory Efficiency"}),": Dynamic resource management to minimize footprint"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Range/Options"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-p"})}),(0,r.jsx)(n.td,{children:"Server port number"}),(0,r.jsx)(n.td,{children:"4242"}),(0,r.jsx)(n.td,{children:"1024-65535"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-h"})}),(0,r.jsx)(n.td,{children:"Server address"}),(0,r.jsx)(n.td,{children:"localhost"}),(0,r.jsx)(n.td,{children:"Any valid hostname/IP"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--fullscreen"})}),(0,r.jsx)(n.td,{children:"Launch in fullscreen mode"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"true/false"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--width"})}),(0,r.jsx)(n.td,{children:"Window width (pixels)"}),(0,r.jsx)(n.td,{children:"1280"}),(0,r.jsx)(n.td,{children:"800-3840"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--height"})}),(0,r.jsx)(n.td,{children:"Window height (pixels)"}),(0,r.jsx)(n.td,{children:"720"}),(0,r.jsx)(n.td,{children:"600-2160"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--msaa"})}),(0,r.jsx)(n.td,{children:"Multisample anti-aliasing level"}),(0,r.jsx)(n.td,{children:"4"}),(0,r.jsx)(n.td,{children:"0/2/4/8"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--vsync"})}),(0,r.jsx)(n.td,{children:"Vertical synchronization"}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"true/false"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"core-architecture",children:"Core Architecture"}),"\n",(0,r.jsx)(n.p,{children:"The GUI is built using a modular, component-based architecture:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Game Loop"}),": Core update and render cycle"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Manager"}),": Server communication and data protocol handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Renderer"}),": 3D and 2D rendering pipeline with multiple strategies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Camera Controller"}),": Advanced camera systems with transitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Manager"}),": Texture and model loading/caching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"UI System"}),": Interactive interface components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event System"}),": Game event processing and visualization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dynamic Library System"}),": Plugin-based graphics and UI modules"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"user-interface-components",children:"User Interface Components"}),"\n",(0,r.jsx)(n.p,{children:"The GUI provides a comprehensive set of interface elements:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Main View"}),": 3D visualization of the game world"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Information Panel"}),": Detailed data on selected game elements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Team Display"}),": Team statistics and player information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Counter"}),": Global and per-tile resource statistics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Game Controls"}),": Simulation speed and camera controls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Log"}),": Real-time event notification system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Player Tracker"}),": Focus and track specific players"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"rendering-technologies",children:"Rendering Technologies"}),"\n",(0,r.jsx)(n.p,{children:"The GUI leverages multiple rendering techniques:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dynamic Level of Detail (LOD)"}),": Adjusts rendering fidelity based on camera distance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frustum Culling"}),": Only renders objects within camera view"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ambient Occlusion"}),": Enhanced depth perception for 3D elements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Normal Mapping"}),": Advanced texture techniques for better visual quality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Particle Systems"}),": Visual effects for game events like incantations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shader-based Rendering"}),": Custom visual effects for game elements"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"communication-protocol",children:"Communication Protocol"}),"\n",(0,r.jsx)(n.p,{children:"The GUI connects to the server using a specialized protocol:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Initial connection with the ",(0,r.jsx)(n.code,{children:"GRAPHIC"})," command"]}),"\n",(0,r.jsx)(n.li,{children:"Receives comprehensive map and entity data"}),"\n",(0,r.jsx)(n.li,{children:"Processes real-time updates for game state changes"}),"\n",(0,r.jsx)(n.li,{children:"Can request specific information about tiles, players, and resources"}),"\n",(0,r.jsx)(n.li,{children:"Optional time-step control for server simulation speed"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dynamic-library-system-dlloader",children:"Dynamic Library System (DLLoader)"}),"\n",(0,r.jsx)(n.p,{children:"The GUI implements a sophisticated dynamic library loading system:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IGraphicsLib Interface"}),": Abstracts rendering functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IGuiLib Interface"}),": Provides UI component rendering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LibraryManager"}),": Handles runtime loading and unloading of modules"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This system allows for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Swapping graphics implementations without recompilation"}),"\n",(0,r.jsx)(n.li,{children:"Custom UI themes and components"}),"\n",(0,r.jsx)(n.li,{children:"Enhanced extensibility for future development"}),"\n",(0,r.jsx)(n.li,{children:"Plugin-based architecture for new features"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3d-visualization-strategies",children:"3D Visualization Strategies"}),"\n",(0,r.jsx)(n.p,{children:"The renderer employs multiple strategies for tile visualization:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simple Strategy"}),": Flat colored tiles for performance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Detailed Strategy"}),": Enhanced tiles with resource indicators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Model Strategy"}),": Full 3D models for immersive visualization"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["For implementation details and technical specifications, refer to the GUI architecture documentation and source code in ",(0,r.jsx)(n.code,{children:"src/GUI/"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);