"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[9146],{4748:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"protocols/server-ai","title":"Server-AI Protocol","description":"Overview","source":"@site/docs/protocols/server-ai.md","sourceDirName":"protocols","slug":"/protocols/server-ai","permalink":"/Zappy/en/docs/protocols/server-ai","draft":false,"unlisted":false,"editUrl":"https://github.com/Epitech/Zappy/tree/main/docs/docusaurus/docs/protocols/server-ai.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"AI Client Architecture","permalink":"/Zappy/en/docs/ai/ai-overview"},"next":{"title":"Server-GUI Protocol","permalink":"/Zappy/en/docs/protocols/server-gui"}}');var i=r(4848),d=r(8453);const l={sidebar_position:1},c="Server-AI Protocol",t={},o=[{value:"Overview",id:"overview",level:2},{value:"Connection Sequence",id:"connection-sequence",level:2},{value:"Message Format",id:"message-format",level:2},{value:"Command Reference",id:"command-reference",level:2},{value:"Basic Commands",id:"basic-commands",level:3},{value:"Resource Types",id:"resource-types",level:3},{value:"Response Formats",id:"response-formats",level:2},{value:"Look Command",id:"look-command",level:3},{value:"Vision Pattern by Level",id:"vision-pattern-by-level",level:4},{value:"Inventory Command",id:"inventory-command",level:3},{value:"Broadcast Command",id:"broadcast-command",level:3},{value:"Incantation Requirements",id:"incantation-requirements",level:2},{value:"Player States",id:"player-states",level:2},{value:"Orientation",id:"orientation",level:3},{value:"Food Management",id:"food-management",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"Time Units",id:"time-units",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Concurrency",id:"concurrency",level:3},{value:"Map Properties",id:"map-properties",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"server-ai-protocol",children:"Server-AI Protocol"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This document details the communication protocol between the Zappy server and artificial intelligence (AI) clients. The protocol uses text-based exchanges over TCP/IP with specified commands and responses, enabling AI clients to interact with the game world."}),"\n",(0,i.jsx)(n.h2,{id:"connection-sequence",children:"Connection Sequence"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TCP Connection"}),": AI client connects to the server via TCP/IP"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Welcome Message"}),": Server responds with: ",(0,i.jsx)(n.code,{children:"WELCOME\\n"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Team Selection"}),": AI client sends team name: ",(0,i.jsx)(n.code,{children:"<team_name>\\n"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection Confirmation"}),": Server responds with:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<client_num>\\n"}),": Client's sequence number within the team"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<X> <Y>\\n"}),": Map dimensions (width \xd7 height)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"message-format",children:"Message Format"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["All commands and responses are terminated with a newline character (",(0,i.jsx)(n.code,{children:"\\n"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Commands have specific execution times measured in server time units"}),"\n",(0,i.jsxs)(n.li,{children:["Multi-line responses end with an empty line (",(0,i.jsx)(n.code,{children:"\\n"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"command-reference",children:"Command Reference"}),"\n",(0,i.jsx)(n.h3,{id:"basic-commands",children:"Basic Commands"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Command"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Response Format"}),(0,i.jsx)(n.th,{children:"Duration (time units)"}),(0,i.jsx)(n.th,{children:"Failure Response"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Forward"})}),(0,i.jsx)(n.td,{children:"Move forward one tile"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ok\\n"})}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Right"})}),(0,i.jsx)(n.td,{children:"Turn 90\xb0 clockwise"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ok\\n"})}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Left"})}),(0,i.jsx)(n.td,{children:"Turn 90\xb0 counter-clockwise"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ok\\n"})}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Look"})}),(0,i.jsx)(n.td,{children:"Survey the environment"}),(0,i.jsx)(n.td,{children:"Multi-line tile contents"}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Inventory"})}),(0,i.jsx)(n.td,{children:"Check inventory contents"}),(0,i.jsx)(n.td,{children:"Multi-line resource list"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Broadcast <text>"})}),(0,i.jsx)(n.td,{children:"Send message to all players"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ok\\n"})}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Connect_nbr"})}),(0,i.jsx)(n.td,{children:"Get available team slots"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"<n>\\n"})," (integer)"]}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Fork"})}),(0,i.jsx)(n.td,{children:"Create a new player egg"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ok\\n"})}),(0,i.jsx)(n.td,{children:"42"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Eject"})}),(0,i.jsx)(n.td,{children:"Push players from current tile"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"ok\\n"})," or ",(0,i.jsx)(n.code,{children:"ko\\n"})]}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ko\\n"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Take <object>"})}),(0,i.jsx)(n.td,{children:"Pick up a resource"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"ok\\n"})," or ",(0,i.jsx)(n.code,{children:"ko\\n"})]}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ko\\n"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Set <object>"})}),(0,i.jsx)(n.td,{children:"Place a resource"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"ok\\n"})," or ",(0,i.jsx)(n.code,{children:"ko\\n"})]}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ko\\n"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Incantation"})}),(0,i.jsx)(n.td,{children:"Start level-up ritual"}),(0,i.jsxs)(n.td,{children:["Start: ",(0,i.jsx)(n.code,{children:"Elevation underway\\n"}),(0,i.jsx)("br",{}),"End: ",(0,i.jsx)(n.code,{children:"Current level: <level>\\n"})," or ",(0,i.jsx)(n.code,{children:"ko\\n"})]}),(0,i.jsx)(n.td,{children:"Variable"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ko\\n"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"resource-types",children:"Resource Types"}),"\n",(0,i.jsxs)(n.p,{children:["Valid object names for ",(0,i.jsx)(n.code,{children:"Take"})," and ",(0,i.jsx)(n.code,{children:"Set"})," commands:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"food"}),": Food units (hunger management)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"linemate"}),": Level 1 resource (green)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"deraumere"}),": Level 2 resource (blue)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sibur"}),": Level 3 resource (red)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mendiane"}),": Level 4 resource (purple)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"phiras"}),": Level 5 resource (yellow)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"thystame"}),": Level 6 resource (cyan)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"response-formats",children:"Response Formats"}),"\n",(0,i.jsx)(n.h3,{id:"look-command",children:"Look Command"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Look"})," command returns a multi-line response representing the visible area:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[<obj1> <obj2> ...],\n[<obj1> <obj2> ...],\n...\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The first line shows the contents of the player's tile"}),"\n",(0,i.jsx)(n.li,{children:"Subsequent lines represent tiles in expanding vision squares"}),"\n",(0,i.jsx)(n.li,{children:"Vision range depends on player level (levels 1-8: 1-9 tiles per side)"}),"\n",(0,i.jsxs)(n.li,{children:["Objects can be: ",(0,i.jsx)(n.code,{children:"player"}),", ",(0,i.jsx)(n.code,{children:"food"}),", or any resource type"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"vision-pattern-by-level",children:"Vision Pattern by Level"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Level 1: 3\xd73 square (9 tiles)\nLevel 2: 5\xd75 square (25 tiles)\nLevel 3: 7\xd77 square (49 tiles)\nLevel 4: 9\xd79 square (81 tiles)\nLevel 5: 11\xd711 square (121 tiles)\n...etc\n"})}),"\n",(0,i.jsx)(n.h3,{id:"inventory-command",children:"Inventory Command"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Inventory"})," command returns the player's current inventory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[food <qty>, linemate <qty>, deraumere <qty>, sibur <qty>, mendiane <qty>, phiras <qty>, thystame <qty>]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"broadcast-command",children:"Broadcast Command"}),"\n",(0,i.jsx)(n.p,{children:"When a player receives a broadcast, they receive a message:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"message <K>, <text>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Where ",(0,i.jsx)(n.code,{children:"K"})," is a direction index (1-8) indicating where the message came from:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"     2 1 8\n     3 X 7\n     4 5 6\n"})}),"\n",(0,i.jsxs)(n.p,{children:["(",(0,i.jsx)(n.code,{children:"X"})," represents the player's position)"]}),"\n",(0,i.jsx)(n.h2,{id:"incantation-requirements",children:"Incantation Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Each level upgrade requires specific resources on the tile and player participation:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Level Transition"}),(0,i.jsx)(n.th,{children:"Players"}),(0,i.jsx)(n.th,{children:"linemate"}),(0,i.jsx)(n.th,{children:"deraumere"}),(0,i.jsx)(n.th,{children:"sibur"}),(0,i.jsx)(n.th,{children:"mendiane"}),(0,i.jsx)(n.th,{children:"phiras"}),(0,i.jsx)(n.th,{children:"thystame"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"1\u21922"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"2\u21923"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"3\u21924"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"4\u21925"}),(0,i.jsx)(n.td,{children:"4"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"5\u21926"}),(0,i.jsx)(n.td,{children:"4"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"6\u21927"}),(0,i.jsx)(n.td,{children:"6"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"7\u21928"}),(0,i.jsx)(n.td,{children:"6"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"2"}),(0,i.jsx)(n.td,{children:"1"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"player-states",children:"Player States"}),"\n",(0,i.jsx)(n.h3,{id:"orientation",children:"Orientation"}),"\n",(0,i.jsx)(n.p,{children:"Player orientation is one of four cardinal directions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"North (top of map)"}),"\n",(0,i.jsx)(n.li,{children:"East (right of map)"}),"\n",(0,i.jsx)(n.li,{children:"South (bottom of map)"}),"\n",(0,i.jsx)(n.li,{children:"West (left of map)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"food-management",children:"Food Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each player consumes 1 food unit every 126 time units"}),"\n",(0,i.jsx)(n.li,{children:"Death occurs when a player runs out of food"}),"\n",(0,i.jsx)(n.li,{children:"Initial inventory contains 10 food units"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"technical-details",children:"Technical Details"}),"\n",(0,i.jsx)(n.h3,{id:"time-units",children:"Time Units"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Server operates on discrete time units (ticks)"}),"\n",(0,i.jsxs)(n.li,{children:["Default frequency is 100 ticks per second (configurable via server ",(0,i.jsx)(n.code,{children:"-f"})," parameter)"]}),"\n",(0,i.jsx)(n.li,{children:"Command costs are measured in ticks"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Invalid commands receive ",(0,i.jsx)(n.code,{children:"ko\\n"})]}),"\n",(0,i.jsx)(n.li,{children:"Malformed commands may disconnect the client"}),"\n",(0,i.jsx)(n.li,{children:"Commands during execution of another command are enqueued"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"concurrency",children:"Concurrency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple commands can be sent without waiting for responses"}),"\n",(0,i.jsx)(n.li,{children:"Responses arrive in same order as commands were sent"}),"\n",(0,i.jsx)(n.li,{children:"Command execution is sequential per player"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"map-properties",children:"Map Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The map is toroidal (wraps around edges)"}),"\n",(0,i.jsx)(n.li,{children:"Coordinates range from 0 to width-1 (X) and 0 to height-1 (Y)"}),"\n",(0,i.jsx)(n.li,{children:"Map can contain multiple players on one tile"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"This protocol documentation provides a comprehensive reference for developers implementing AI clients for the Zappy server. For implementation guidance, refer to the AI client architecture documentation."})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);